1.文件管理

<1>查看文件信息：ls
-a	显示指定目录下所有子目录与文件，包括隐藏文件
-l	以列表方式显示文件的详细信息
-h	配合 -l 以人性化的方式显示文件大小
<2>输出重定向命令：>
<3>分屏显示：more  ex more feiji.py
<4>管道：| 管道：一个命令的输出可以通过管道做为另一个命令的输入。
<5>清屏：clear
<6>切换工作目录： cd   ex : cd ~/Desktop 切换到桌面目录
<7>显示当前路径：pwd  使用pwd命令可以显示当前的工作目录，该命令很简单，直接输入pwd即可，后面不带参数。
<8>创建目录：mkdir   ex: mkdir hah
    创建多层目录 mkdir a/c/b/c/d -p
<9>删除目录：rmdir 可使用rmdir命令删除一个目录。必须离开目录，并且目录必须为空目录，不然提示删除失败
<10>删除文件：rm 可通过rm删除文件或目录。使用rm命令要小心，因为文件删除后不能恢复。为了防止文件误删，可以在rm后使用-i参数以逐个确认要删除的文件。
    -i	以进行交互式方式执行
    -f	强制删除，忽略不存在的文件，无需提示
    -r	递归地删除目录下的内容，删除文件夹时必须加此参数
<11>建立链接文件：ln  没有-s选项代表建立一个硬链接文件，两个文件占用相同大小的硬盘空间，即使删除了源文件，链接文件还是存在，所以-s选项是更常见的形式。
    ln 源文件 链接文件
    ln -s 源文件 链接文件  硬链接采用的是标记，删除源文件，只是删除标记，直到标记为0
<12>查看或者合并文件内容：cat 
    查看一个文件 cat 1.txt
    合并查看 cat 1.txt 2.txt
    可以重定向 cat 1.txt 2.txt > hehe.txt
<13>文本搜索：grep 一般格式  grep [-选项] ‘搜索内容串’文件名
    -v	显示不包含匹配文本的所有行（相当于求反）
    -n	显示匹配行及行号
    -i	忽略大小写
    grep搜索内容串可以是正则表达式。
    ^a	行首,搜寻以 m 开头的行；grep -n '^a' 1.txt
    ke$	行尾,搜寻以 ke 结束的行；grep -n 'ke$' 1.tx
<14>查找文件：find  find命令功能非常强大，通常用来在特定的目录下搜索符合条件的文件，也可以用来搜索特定用户属主的文件。
    find ./ -name test.sh	查找当前目录下所有名为test.sh的文件
    find ./ -name '*.sh'	查找当前目录下所有后缀为.sh的文件
    find ./ -name "[A-Z]*"	查找当前目录下所有以大写字母开头的文件
    find /tmp -size 2M	查找在/tmp 目录下等于2M的文件
    find /tmp -size +2M	查找在/tmp 目录下大于2M的文件
    find /tmp -size -2M	查找在/tmp 目录下小于2M的文件
    find ./ -size +4k -size -5M	查找当前目录下大于4k，小于5M的文件
    find ./ -perm 0777	查找当前目录下权限为 777 的文件或目录

<15>拷贝文件：cp
    cp命令的功能是将给出的文件或目录复制到另一个文件或目录中，相当于DOS下的copy命令。
    -a	该选项通常在复制目录时使用，它保留链接、文件属性，并递归地复制目录，简单而言，保持文件原有属性。
    -f	已经存在的目标文件而不提示
    -i	交互式复制，在覆盖目标文件之前将给出提示要求用户确认
    -r	若给出的源文件是目录文件，则cp将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名。
    -v	显示拷贝进度
<16>移动文件：mv  用户可以使用mv命令来移动文件或目录，也可以给文件或目录重命名。
    -f	禁止交互式操作，如有覆盖也不会给出提示
    -i	确认交互方式操作，如果mv操作将导致对已存在的目标文件的覆盖，系统会询问是否重写，要求用户回答以避免误覆盖文件
    -v	显示移动进度
<17>归档管理：tar
    -c	生成档案文件，创建打包文件
    -v	列出归档解档的详细过程，显示进度
    -f	指定档案文件名称，f后面一定是.tar文件，所以必须放选项最后
    -t	列出档案中包含的文件
    -x	解开档案文件

<18>文件压缩解压：gzip  tar与gzip命令结合使用实现文件打包、压缩。 tar只负责打包文件，但不压缩，用gzip压缩tar打包后的文件，其扩展名一般用xxxx.tar.gz。
    把当前路径下所有的文件和文件夹打包并压缩到test.tar.gez
    tar -zcvf test.tar.gz *   (*)可以指定文件，空格隔开就可以
    解压到当前路径  tar -zxvf test.tar.gz
    解压到指定路径  tar -zxvf test.tar.gz -C ~/Desktop

<19>文件压缩解压：bzip2
    把当前路径下所有的文件和文件夹打包并压缩到test.tar.gz2
    tar -zcvf test.tar.gz2 *   (*)可以指定文件，空格隔开就可以
    解压到当前路径  tar -jxvf test.tar.gz
    解压到指定路径  tar -jxvf test.tar.gz -C ~/Desktop
<20>文件压缩解压：zip、unzip
    压缩文件：zip [-r] 目标文件(没有扩展名) 源文件
    解压文件：unzip -d 解压后目录文件 压缩文件
<21>查看命令位置：which  如which ls
============================================================================
2. Linux命令-用户、权限管理
<1>查看当前用户：whoami
<2>查看登录用户：who  who命令用于查看当前所有登录系统的用户信息。
    -m或am I	只显示运行who命令的用户名、登录终端和登录时间
    -q或--count	只显示用户的登录账号和登录用户的数量
    -u或--heading	显示列标题

<3>退出登录账户： exit
<4>添加用户账号：useradd
    -d 	指定用户登录系统时的主目录，如果不使用该参数，系统自动在/home目录下建立与用户名同名目录为主目录
    -m	自动建立目录
    -g	指定组名称

    useradd -d /home/abc abc -m	创建abc用户，如果/home/abc目录不存在，就自动创建这个目录，同时用户属于abc组
    useradd -d /home/a a -g test -m	创建一个用户名字叫a，主目录在/home/a，如果主目录不存在，就自动创建主目录，同时用户属于test组
    cat /etc/passwd	查看系统当前用户名

<5>设置用户密码：passwd 
    ex: sudo passwd super 然后根据提示输入密码即可

<6>删除用户：userdel
    serdel abc(用户名)	删除abc用户，但不会自动删除用户的主目录
    userdel -r abc(用户名)	删除用户，同时删除用户的主目录
<7>切换用户：su
    可以通过su命令切换用户，su后面可以加“-”。su和su –命令不同之处在于，
    su -切换到对应的用户时会将当前的工作目录自动转换到切换后的用户主目录：
    su	切换到root用户
    su root	切换到root用户
    su -	切换到root用户，同时切换目录到/root
    su - root	切换到root用户，同时切换目录到/root
    su 普通用户	切换到普通用户
    su - 普通用户	切换到普通用户，同时切换普通用户所在的目录

<8>查看有哪些用户组
    第一种：cat /etc/group
    第二种：groupmod +三次tab键

<9>添加、删除组账号：groupadd、groupdel
    groupadd 新建组账号 groupdel 组账号 cat /etc/group 查看用户组

<10>修改用户所在组：usermod
    usermod -g 用户组 用户名

<11>查看用户在哪些组
    groups super

<12>为创建的普通用户添加sudo权限
    新创建的用户，默认不能sudo，需要进行一下操作
    sudo usermod -a -G adm 用户名
    sudo usermod -a -G sudo 用户名

<13>usermod -g 与 -G的区别
    -g用来制定这个用户默认的用户组
    -G一般配合'-a'来完成向其它组添加
<14>修改文件权限：chmod
    u	user 表示该文件的所有者
    g	group 表示与该文件的所有者属于同一组( group )者，即用户组
    o	other 表示其他以外的人
    a	all 表示这三者皆是
    +	增加权限
    -	撤销权限
    =	设定权限
    r	read 表示可读取，对于一个目录，如果没有r权限，那么就意味着不能通过ls查看这个目录的内容。
    w	write 表示可写入，对于一个目录，如果没有w权限，那么就意味着不能在目录下创建新的文件。
    x	excute 表示可执行，对于一个目录，如果没有x权限，那么就意味着不能通过cd进入这个目录。
    chmod u+x test.txt 修改文件拥有者的执行权限
    chmod g-w test.txt 同组的减去写入权限
    chmod 0+w test.txt 任何人都有写入权限
    chmod u=rw,g=x,o=r 1.py 同时设定多个权限
    ============================================
    r	读取权限，数字代号为 "4"
    w	写入权限，数字代号为 "2"
    x	执行权限，数字代号为 "1"
    -	不具任何权限，数字代号为 "0"
    chmod u=rwx,g=rx,o=r filename 就等同于：chmod u=7,g=5,o=4 filename
    chmod 751 file：

<15>修改文件所有者：chown
    sudo chown super test.txt  更改文件所有者为super

<16>修改文件所属组：chgrp
    sudo ：chgrp super test.txt 更改文件所有者的组为super


Linux命令-系统管理
<1>查看当前日历：cal
    cal命令用于查看当前日历，-y显示整年日历：

<2>显示或设置时间：date  格式化输出
    date '+%Y/%m/%d'    2018/8/29
    date '+%Y=%m=%d'    2018=8=29

<3>查看进程信息：ps
    -a	显示终端上的所有进程，包括其他用户的进程
    -u	显示进程的详细状态
    -x	显示没有控制终端的进程
    -w	显示加宽，以便显示更多的信息
    -r	只显示正在运行的进程

<4>动态显示进程：top
    M	根据内存使用量来排序
    P	根据CPU占有率来排序
    T	根据进程运行时间的长短来排序
    U	可以根据后面输入的用户名来筛选进程
    K	可以根据后面输入的PID来杀死进程。
    q	退出
    h	获得帮助

<5>终止进程：kill      kill [-signal] pid
    kill -9 10354      有些进程不能直接杀死，这时候我们需要加一个参数“ -9 ”，“ -9 ” 代表强制结束

<6>关机重启：reboot、shutdown、init
    reboot	重新启动操作系统
    shutdown –r now	重新启动操作系统，shutdown会给别的用户提示
    shutdown -h now	立刻关机，其中now相当于时间为0的状态
    shutdown -h 20:25	系统在今天的20:25 会关机
    shutdown -h +10	系统再过十分钟后自动关机
    init 0	关机
    init 6	重启

<7>检测磁盘空间：df
    -a	显示所有文件系统的磁盘使用情况
    -m	以1024字节为单位显示
    -t 	显示各指定文件系统的磁盘空间使用情况
    -T	显示文件系统
<8>检测目录所占磁盘空间：du
    -a	递归显示指定目录中各文件和子目录中文件占用的数据块
    -s	显示指定文件或目录占用的数据块
    -b	以字节为单位显示磁盘占用情况
    -l	计算所有文件大小，对硬链接文件计算多次
<9>查看或配置网卡信息：ifconfig
<10>测试远程主机连通性：ping

编辑器之神-vim
Vi有三种基本工作模式：
+  命令模式
+  文本输入模式
+  末行模式。
命令行模式

任何时候，不管用户处于何种模式，只要按一下ESC键，即可使Vi进入命令模式；我们在shell环境(提示符为$)下输入启动Vi命令，进入编辑器时，
也是处于该模式下。在该模式下，用户可以输入各种合法的Vi命令，用于管理自己的文档。此时从键盘上输入的任何字符都被当做编辑命令来解释，
若输入的字符是合法的Vi命令，则Vi在接受用户命令之后完成相应的动作。但需注意的是，所输入的命令并不在屏幕上显示出来。若输入的字符不是Vi的合法命令，
会响铃报警。

文本输入模式

在命令模式下输入插入命令i、附加命令a 、打开命令o、修改命令c、取代命令r或替换命令s都可以进入文本输入模式。在该模式下，用户输入的任何字符
都被Vi当做文件内容保存起来，并将其显示在屏幕上。在文本输入过程中，若想回到命令模式下，按键ESC即可。


末行模式

末行模式也称ex转义模式。在命令模式下，用户按“:”键即可进入末行模式下，此时Vi会在显示窗口的最后一行(通常也是屏幕的最后一行)显示一个“:”
作为末行模式的提示符，等待用户输入命令。多数文件管理命令都是在此模式下执行的(如把编辑缓冲区的内容写到文件中等)。末行命令执行完后，
Vi自动回到命令模式。例如：
:sp newfile则分出一个窗口编辑newfile文件。如果要从命令模式转换到编辑模式，可以键入命令a或者i；如果需要从文本模式返回，则按Esc键即可。在
命令模式下输入“:”即可切换到末行模式，然后输入命令。

vim基础操作

vim是从 vi 发展出来的一个文本编辑器 。代码补完、编译及错误跳转等方便编程的功能特别丰富

进入插入模式:
    i: 插入光标前一个字符 
    I: 插入行首 
    a: 插入光标后一个字符 
    A: 插入行未 
    o: 向下新开一行,插入行首 
    O: 向上新开一行,插入行首

进入命令模式:
    ESC:从插入模式或末行模式进入命令模式
    移动光标:
    h: 左移 
    j: 下移 
    k: 上移 
    l: 右移
    M: 光标移动到中间行 
    L: 光标移动到屏幕最后一行行首 
    G: 移动到指定行,行号 -G
    w: 向后一次移动一个字 
    b: 向前一次移动一个字
    {: 按段移动,上移 
    }: 按段移动,下移
    Ctr-d: 向下翻半屏 
    Ctr-u: 向上翻半屏
    Ctr-f: 向下翻一屏 
    Ctr-b: 向上翻一屏
    gg: 光标移动文件开头 
    G: 光标移动到文件末尾

撤销命令:
    u: 一步一步撤销 
    Ctr-r: 反撤销
重复命令:
    .: 重复上一次操作的命令

文本行移动:
    >>: 文本行右移 
    <<: 文本行左移

复制粘贴:
    yy: 复制当前行,n yy 复制 n 行 
    p: 在光标所在位置向下新开辟一行,粘贴

可视模式:
    v: 按字符移动,选中文本 
    V: 按行移动,选中文本可视模式可以配合 d, y, >>, << 实现对文本块的删除,复制,左右移动
替换操作:
    r: 替换当前字符 
    R: 替换当前行光标后的字符
查找命令:
    /: str查找
    n: 下一个
    N：上一个

替换命令：
    把abc全部替换成123
    末行模式下，将光标所在行的abc替换成123
    :%s/abc/123/g
    末行模式下，将第一行至第10行之间的abc替换成123
    :1, 10s/abc/123/g

vim里执行 shell 下命令:
    末行模式里输入!,后面跟命令

=================================================================
ubuntu软件安装与卸载
1. 寻找国内镜像源
2. 备份Ubuntu默认的源地址
    sudo cp /etc/apt/sources.list  /etc/apt/sources.list.backup
3. 更新源服务器列表
    sudo gedit /etc/apt/sources.list  就可以查看服务器列表
==================================================================
Ubuntu软件操作的相关命令
sudo apt-get update  【更新源】
sudo apt-get install package 【安装包】
sudo apt-get remove package 【删除包】
sudo apt-cache search package 【搜索软件包】
sudo apt-cache show package  获取包的相关信息，如说明、大小、版本等
sudo apt-get install package --reinstall   重新安装包
sudo apt-get -f install   修复安装
sudo apt-get remove package --purge 删除包，包括配置文件等
sudo apt-get build-dep package 安装相关的编译环境
sudo apt-get upgrade 更新已安装的包
sudo apt-get dist-upgrade 升级系统
sudo apt-cache depends package 了解使用该包依赖那些包
sudo apt-cache rdepends package 查看该包被哪些包依赖
sudo apt-get source package  下载该包的源代码
sudo apt-get clean && sudo apt-get autoclean 清理无用的包
sudo apt-get check 检查是否有损坏的依赖